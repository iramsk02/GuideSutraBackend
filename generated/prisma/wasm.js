
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  dob: 'dob',
  educationLevel: 'educationLevel',
  gender: 'gender',
  interests: 'interests',
  location: 'location',
  skills: 'skills'
};

exports.Prisma.AssessmentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  testType: 'testType',
  score: 'score',
  stream: 'stream',
  strengths: 'strengths',
  weaknesses: 'weaknesses',
  createdAt: 'createdAt'
};

exports.Prisma.CareerScalarFieldEnum = {
  id: 'id',
  careerName: 'careerName',
  description: 'description',
  requiredSkills: 'requiredSkills',
  requiredStream: 'requiredStream',
  futureScope: 'futureScope'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  courseName: 'courseName',
  stream: 'stream',
  duration: 'duration',
  eligibility: 'eligibility',
  careerId: 'careerId'
};

exports.Prisma.CollegeScalarFieldEnum = {
  id: 'id',
  collegeName: 'collegeName',
  location: 'location',
  affiliation: 'affiliation'
};

exports.Prisma.CollegeCourseScalarFieldEnum = {
  id: 'id',
  collegeId: 'collegeId',
  courseId: 'courseId'
};

exports.Prisma.SkillScalarFieldEnum = {
  id: 'id',
  skillName: 'skillName'
};

exports.Prisma.CareerSkillScalarFieldEnum = {
  id: 'id',
  careerId: 'careerId',
  skillId: 'skillId'
};

exports.Prisma.CourseSkillScalarFieldEnum = {
  id: 'id',
  courseId: 'courseId',
  skillId: 'skillId'
};

exports.Prisma.RecommendationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  careerId: 'careerId',
  courseId: 'courseId',
  collegeId: 'collegeId',
  score: 'score',
  reason: 'reason',
  recommendedAt: 'recommendedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Assessment: 'Assessment',
  Career: 'Career',
  Course: 'Course',
  College: 'College',
  CollegeCourse: 'CollegeCourse',
  Skill: 'Skill',
  CareerSkill: 'CareerSkill',
  CourseSkill: 'CourseSkill',
  Recommendation: 'Recommendation'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\Iram\\WorkSpace\\SIH\\Backend\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\Iram\\WorkSpace\\SIH\\Backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../generated/prisma\"\n  binaryTargets = [\"native\", \"debian-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id              Int              @id @default(autoincrement())\n  email           String           @unique\n  name            String?\n  dob             DateTime?\n  educationLevel  String?\n  gender          String?\n  interests       String[]\n  location        String?\n  skills          String[]\n  assessments     Assessment[]\n  recommendations Recommendation[]\n}\n\nmodel Assessment {\n  id         Int      @id @default(autoincrement())\n  userId     Int\n  testType   String?\n  score      Float?\n  stream     String?\n  strengths  String[]\n  weaknesses String[]\n  createdAt  DateTime @default(now())\n  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Career {\n  id              Int              @id @default(autoincrement())\n  careerName      String           @unique\n  description     String?\n  requiredSkills  String[]\n  requiredStream  String?\n  futureScope     String?\n  careerSkills    CareerSkill[]\n  courses         Course[]\n  recommendations Recommendation[]\n}\n\nmodel Course {\n  id              Int              @id @default(autoincrement())\n  courseName      String           @unique\n  stream          String?\n  duration        String?\n  eligibility     String?\n  careerId        Int?\n  collegeCourses  CollegeCourse[]\n  career          Career?          @relation(fields: [careerId], references: [id])\n  courseSkills    CourseSkill[]\n  recommendations Recommendation[]\n}\n\nmodel College {\n  id              Int              @id @default(autoincrement())\n  collegeName     String\n  location        String?\n  affiliation     String?\n  collegeCourses  CollegeCourse[]\n  recommendations Recommendation[]\n}\n\nmodel CollegeCourse {\n  id        Int     @id @default(autoincrement())\n  collegeId Int\n  courseId  Int\n  college   College @relation(fields: [collegeId], references: [id], onDelete: Cascade)\n  course    Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)\n\n  @@unique([collegeId, courseId])\n}\n\nmodel Skill {\n  id           Int           @id @default(autoincrement())\n  skillName    String        @unique\n  careerSkills CareerSkill[]\n  courseSkills CourseSkill[]\n}\n\nmodel CareerSkill {\n  id       Int    @id @default(autoincrement())\n  careerId Int\n  skillId  Int\n  career   Career @relation(fields: [careerId], references: [id], onDelete: Cascade)\n  skill    Skill  @relation(fields: [skillId], references: [id], onDelete: Cascade)\n\n  @@unique([careerId, skillId])\n}\n\nmodel CourseSkill {\n  id       Int    @id @default(autoincrement())\n  courseId Int\n  skillId  Int\n  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  skill    Skill  @relation(fields: [skillId], references: [id], onDelete: Cascade)\n\n  @@unique([courseId, skillId])\n}\n\nmodel Recommendation {\n  id            Int      @id @default(autoincrement())\n  userId        Int\n  careerId      Int?\n  courseId      Int?\n  collegeId     Int?\n  score         Float?\n  reason        String?\n  recommendedAt DateTime @default(now())\n  career        Career?  @relation(fields: [careerId], references: [id])\n  college       College? @relation(fields: [collegeId], references: [id])\n  course        Course?  @relation(fields: [courseId], references: [id])\n  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n",
  "inlineSchemaHash": "5131be5a3db0265b8e4c420e3b6f429d682754473b21525f6a3356c00ff5bcf3",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dob\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"educationLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"interests\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assessments\",\"kind\":\"object\",\"type\":\"Assessment\",\"relationName\":\"AssessmentToUser\"},{\"name\":\"recommendations\",\"kind\":\"object\",\"type\":\"Recommendation\",\"relationName\":\"RecommendationToUser\"}],\"dbName\":null},\"Assessment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"testType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stream\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strengths\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weaknesses\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AssessmentToUser\"}],\"dbName\":null},\"Career\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"careerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requiredSkills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requiredStream\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"futureScope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"careerSkills\",\"kind\":\"object\",\"type\":\"CareerSkill\",\"relationName\":\"CareerToCareerSkill\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CareerToCourse\"},{\"name\":\"recommendations\",\"kind\":\"object\",\"type\":\"Recommendation\",\"relationName\":\"CareerToRecommendation\"}],\"dbName\":null},\"Course\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"courseName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stream\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eligibility\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"careerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collegeCourses\",\"kind\":\"object\",\"type\":\"CollegeCourse\",\"relationName\":\"CollegeCourseToCourse\"},{\"name\":\"career\",\"kind\":\"object\",\"type\":\"Career\",\"relationName\":\"CareerToCourse\"},{\"name\":\"courseSkills\",\"kind\":\"object\",\"type\":\"CourseSkill\",\"relationName\":\"CourseToCourseSkill\"},{\"name\":\"recommendations\",\"kind\":\"object\",\"type\":\"Recommendation\",\"relationName\":\"CourseToRecommendation\"}],\"dbName\":null},\"College\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collegeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"affiliation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"collegeCourses\",\"kind\":\"object\",\"type\":\"CollegeCourse\",\"relationName\":\"CollegeToCollegeCourse\"},{\"name\":\"recommendations\",\"kind\":\"object\",\"type\":\"Recommendation\",\"relationName\":\"CollegeToRecommendation\"}],\"dbName\":null},\"CollegeCourse\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collegeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"college\",\"kind\":\"object\",\"type\":\"College\",\"relationName\":\"CollegeToCollegeCourse\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CollegeCourseToCourse\"}],\"dbName\":null},\"Skill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"skillName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"careerSkills\",\"kind\":\"object\",\"type\":\"CareerSkill\",\"relationName\":\"CareerSkillToSkill\"},{\"name\":\"courseSkills\",\"kind\":\"object\",\"type\":\"CourseSkill\",\"relationName\":\"CourseSkillToSkill\"}],\"dbName\":null},\"CareerSkill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"careerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"career\",\"kind\":\"object\",\"type\":\"Career\",\"relationName\":\"CareerToCareerSkill\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"CareerSkillToSkill\"}],\"dbName\":null},\"CourseSkill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToCourseSkill\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"CourseSkillToSkill\"}],\"dbName\":null},\"Recommendation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"careerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collegeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recommendedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"career\",\"kind\":\"object\",\"type\":\"Career\",\"relationName\":\"CareerToRecommendation\"},{\"name\":\"college\",\"kind\":\"object\",\"type\":\"College\",\"relationName\":\"CollegeToRecommendation\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToRecommendation\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RecommendationToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

